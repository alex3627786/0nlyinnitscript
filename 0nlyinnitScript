local P = game:GetService("Players")
local L = P.LocalPlayer
local C = workspace.CurrentCamera
local U = game:GetService("UserInputService")

local o = false
local t = nil

local function g()
    local d = math.huge
    local p = nil

    for _, v in pairs(P:GetPlayers()) do
        if v ~= L and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
            local h = v.Character.HumanoidRootPart
            local s, b = C:WorldToScreenPoint(h.Position)
            if b then
                local m = Vector2.new(C.ViewportSize.X / 2, C.ViewportSize.Y / 2)
                local dis = (m - Vector2.new(s.X, s.Y)).magnitude
                if dis < d then
                    d = dis
                    p = v
                end
            end
        end
    end

    return p
end

local function l()
    if o then
        t = g()
    else
        t = nil
    end
end

local function a()
    if o and t and t.Character and t.Character:FindFirstChild("Head") then
        local h = t.Character.Head
        C.CFrame = CFrame.new(C.CFrame.Position, h.Position)
    end
end

local S = Instance.new("ScreenGui")
local B = Instance.new("TextButton")

S.Parent = game.CoreGui
S.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

B.Parent = S
B.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
B.BackgroundTransparency = 0.5
B.BorderColor3 = Color3.fromRGB(255, 255, 255)
B.Position = UDim2.new(0, 100, 0, 100)
B.Size = UDim2.new(0, 200, 0, 50)
B.Font = Enum.Font.SourceSans
B.Text = "Toggle Lock On"
B.TextColor3 = Color3.fromRGB(255, 255, 255)
B.TextSize = 24

B.MouseButton1Click:Connect(function()
    o = not o
    l()
    B.Text = o and "Unlock" or "Lock On"
end)

local d = false
local i, s, p

local function u(inp)
    local delta = inp.Position - s
    B.Position = UDim2.new(p.X.Scale, p.X.Offset + delta.X, p.Y.Scale, p.Y.Offset + delta.Y)
end

B.InputBegan:Connect(function(inp)
    if inp.UserInputType == Enum.UserInputType.MouseButton1 then
        d = true
        s = inp.Position
        p = B.Position

        inp.Changed:Connect(function()
            if inp.UserInputState == Enum.UserInputState.End then
                d = false
            end
        end)
    end
end)

B.InputChanged:Connect(function(inp)
    if inp.UserInputType == Enum.UserInputType.MouseMovement then
        i = inp
    end
end)

U.InputChanged:Connect(function(inp)
    if inp == i and d then
        u(inp)
    end
end)

game:GetService("RunService").RenderStepped:Connect(a)
